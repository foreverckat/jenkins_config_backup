<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>该项内容包括：&#xd;
 1. 将37机器上的特殊静态表分支中的内容进行打包，并拷贝到常规资源打包分支的StreamAssets内容下；&#xd;
 2. 该操作不会影响dev内容，需要由策划人员验收37的资源正确后，将对应的静态表源文件在37目录下提交，并重新在常规资源分支进行打包提交到dev；</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <EnvInjectJobProperty plugin="envinject@2.0">
      <info>
        <scriptContent>taskkill  /F /FI &quot;IMAGENAME eq unity*</scriptContent>
        <secureGroovyScript plugin="script-security@1.27">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>2</daysToKeep>
        <numToKeep>2</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.6">
    <scms>
      <hudson.plugins.git.GitSCM plugin="git@3.3.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>http://192.168.1.138/joker/xClient.git</url>
            <credentialsId>6e9dc5b1-d806-444b-a89c-12e5176babfa</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/dev</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions/>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <assignedNode>resources_slave</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>#!-*- coding=utf8 -*-
## make requested resources path if it not exists.
#import os
#The output path &quot;d:/jenkins_build/workspace/res_dev_rsync/Assets/StreamingAssets/iOS&quot; doesn&apos;t exist
#ios_path = os.path.join(os.getcwd(), &quot;Assets//StreamingAssets//iOS&quot;)
#android_path = os.path.join(os.getcwd(), &quot;Assets//StreamingAssets//Android&quot;)
#windows_path = os.path.join(os.getcwd(), &quot;Assets//StreamingAssets//Windows&quot;)

#if not os.path.exists(ios_path):os.makedirs(ios_path)
#if not os.path.exists(android_path):os.makedirs(android_path) 
#if not os.path.exists(windows_path):os.makedirs(windows_path)
  
#print &quot;path check finished.&quot;</command>
    </hudson.plugins.python.Python>
    <hudson.tasks.Shell>
      <command>mkdir -p StreamingAssets
cd svn_resource
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.unity3d.Unity3dBuilder plugin="unity3d-plugin@1.3">
      <unity3dName>unity5.3.3_resource_win10</unity3dName>
      <argLine>-quit -batchmode -executeMethod Joker.ResourceManager.ResourceUtility.AutoBuildMobileAndroidBundles</argLine>
      <unstableReturnCodes></unstableReturnCodes>
    </org.jenkinsci.plugins.unity3d.Unity3dBuilder>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>