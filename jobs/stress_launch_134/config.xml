<?xml version='1.0' encoding='UTF-8'?>
<maven2-moduleset plugin="maven-plugin@2.7.1">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>1</daysToKeep>
        <numToKeep>1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.PasswordParameterDefinition>
          <name>DB_ROOT_PWD</name>
          <description>该环境的数据库root密码</description>
          <defaultValue>+6uo+ilaoscnENBsov2sygsweCr1tHIsMCMdbA2mlhI=</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SERVER_ID</name>
          <description></description>
          <defaultValue>1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MONITOR_OPTS</name>
          <description></description>
          <defaultValue>&apos;-Djava.rmi.server.hostname=192.168.1.134 -Dcom.sun.management.jmxremote.port=7091 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.autodiscovery=true&apos;</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JAVA_OPTS</name>
          <description></description>
          <defaultValue>&apos;-server -Xms1024m -Xmx1024m -Xmn512m -verbose:gc -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails -XX:PermSize=40m -XX:+PrintGCApplicationStoppedTime -Dio.netty.leakDetectionLevel=paranoid -XX:+UseConcMarkSweepGC -XX:+UseCMSCompactAtFullCollection -XX:CMSFullGCsBeforeCompaction=5&apos;</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PORT</name>
          <description></description>
          <defaultValue>8091</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DB_HOST</name>
          <description></description>
          <defaultValue>127.0.0.1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>APPROOT</name>
          <description></description>
          <defaultValue>joker</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>APPFOLDER</name>
          <description></description>
          <defaultValue>app</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BOSS_THREAD_COUNT</name>
          <description></description>
          <defaultValue>1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>WORKER_THREAD_COUNT</name>
          <description></description>
          <defaultValue>2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>HANDLER_THREAD_COUNT</name>
          <description></description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>${SERVER_REPO}</url>
        <credentialsId>6e9dc5b1-d806-444b-a89c-12e5176babfa</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/${STRESS_BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
      <hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
        <sparseCheckoutPaths>
          <hudson.plugins.git.extensions.impl.SparseCheckoutPath>
            <path>launch_server</path>
          </hudson.plugins.git.extensions.impl.SparseCheckoutPath>
          <hudson.plugins.git.extensions.impl.SparseCheckoutPath>
            <path>region_config</path>
          </hudson.plugins.git.extensions.impl.SparseCheckoutPath>
        </sparseCheckoutPaths>
      </hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <rootModule>
    <groupId>com.joker.server</groupId>
    <artifactId>joker_launch_server</artifactId>
  </rootModule>
  <rootPOM>launch_server/pom.xml</rootPOM>
  <goals>clean package</goals>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <ignoreUpstremChanges>true</ignoreUpstremChanges>
  <archivingDisabled>false</archivingDisabled>
  <siteArchivingDisabled>false</siteArchivingDisabled>
  <fingerprintingDisabled>false</fingerprintingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
  <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
  <settings class="jenkins.mvn.DefaultSettingsProvider"/>
  <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
  <reporters/>
  <publishers/>
  <buildWrappers/>
  <prebuilders>
    <hudson.tasks.Shell>
      <command>echo &quot;修改gameconfig,需要被取消&quot;
sed -i &quot;s/&lt;ServerId&gt;.*&lt;\/ServerId&gt;/&lt;ServerId&gt;${SERVER_ID}&lt;\/ServerId&gt;/g&quot; ./launch_server/src/main/resources/gameconfig.xml
sed -i &quot;s/&lt;BossThreadPoolSize&gt;.*&lt;\/BossThreadPoolSize&gt;/&lt;BossThreadPoolSize&gt;${BOSS_THREAD_COUNT}&lt;\/BossThreadPoolSize&gt;/g&quot; ./launch_server/src/main/resources/gameconfig.xml
sed -i &quot;s/&lt;WorkerThreadPoolSize&gt;.*&lt;\/WorkerThreadPoolSize&gt;/&lt;WorkerThreadPoolSize&gt;${WORKER_THREAD_COUNT}&lt;\/WorkerThreadPoolSize&gt;/g&quot; ./launch_server/src/main/resources/gameconfig.xml
sed -i &quot;s/&lt;HanlerThreadPoolSize&gt;.*&lt;\/HanlerThreadPoolSize&gt;/&lt;HanlerThreadPoolSize&gt;${HANDLER_THREAD_COUNT}&lt;\/HanlerThreadPoolSize&gt;/g&quot; ./launch_server/src/main/resources/gameconfig.xml


echo &quot;修改redis线程池配置&quot;
sed -i &quot;s/redis.pool.maxTotal=.*/redis.pool.maxTotal=20/g&quot; ./launch_server/src/main/resources/redis.properties
sed -i &quot;s/redis.pool.maxIdle=.*/redis.pool.maxIdle=10/g&quot; ./launch_server/src/main/resources/redis.properties
sed -i &quot;s/redis.pool.minIdle=.*/redis.pool.minIdle=10/g&quot; ./launch_server/src/main/resources/redis.properties


echo &quot;修改c3p0线程池配置&quot;
sed -i &quot;s/c3p0.acquireIncrement=.*/c3p0.acquireIncrement=10/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.acquireRetryAttempts=.*/c3p0.acquireRetryAttempts=30/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.checkoutTimeout=.*/c3p0.checkoutTimeout=5000/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.initialPoolSize=.*/c3p0.initialPoolSize=10/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.maxPoolSize=.*/c3p0.maxPoolSize=20/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.minPoolSize=.*/c3p0.minPoolSize=10/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.maxStatements=.*/c3p0.maxStatements=0/g&quot; ./launch_server/src/main/resources/c3p0.properties

#timeout configuration
sed -i &quot;s/c3p0.breakOnAcquireFailure=.*/c3p0.breakOnAcquireFailure=true/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.maxIdleTime=.*/c3p0.maxIdleTime=5400/g&quot; ./launch_server/src/main/resources/c3p0.properties
sed -i &quot;s/c3p0.idleConnectionTestPeriod=.*/c3p0.idleConnectionTestPeriod=3600/g&quot; ./launch_server/src/main/resources/c3p0.properties</command>
    </hudson.tasks.Shell>
    <jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin plugin="publish-over-ssh@1.13">
      <delegate>
        <consolePrefix>SSH: </consolePrefix>
        <delegate>
          <publishers>
            <jenkins.plugins.publish__over__ssh.BapSshPublisher>
              <configName>stress_launch_host</configName>
              <verbose>false</verbose>
              <transfers>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory>${APPROOT}/${APPFOLDER}</remoteDirectory>
                  <sourceFiles>region_config/regionConfig_stress.xml</sourceFiles>
                  <excludes></excludes>
                  <removePrefix>region_config</removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>cd ${APPROOT}/${APPFOLDER}
mv regionConfig_stress.xml regionConfig.xml</execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory>${APPROOT}/${APPFOLDER}/launch_server</remoteDirectory>
                  <sourceFiles>launch_server/src/main/resources/*</sourceFiles>
                  <excludes></excludes>
                  <removePrefix>launch_server/src/main</removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand></execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory>${APPROOT}/${APPFOLDER}/launch_server</remoteDirectory>
                  <sourceFiles>launch_server/script/*</sourceFiles>
                  <excludes></excludes>
                  <removePrefix>launch_server/script</removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>cd  ~/${APPROOT}/${APPFOLDER}

sed -i &quot;s/ROOTPWD=.*/ROOTPWD=${DB_ROOT_PWD}/g&quot; ./launch_server/create_db_and_user
sed -i &quot;s/HOST=.*/HOST=${DB_HOST}/g&quot; ./launch_server/create_db_and_user

#修改JVM参数
sed -i &quot;s/MONITOR_OPTS=.*/MONITOR_OPTS=${MONITOR_OPTS}/g&quot;  ./launch_server/joker_launch_server
sed -i &quot;s/JAVA_OPTS=.*/JAVA_OPTS=${JAVA_OPTS}/g&quot;  ./launch_server/joker_launch_server
chmod a+x  ./launch_server/joker_launch_server

#&quot;停服&quot;
bash ./launch_server/joker_launch_server stop ${SERVER_ID} ${PORT} ./regionConfig.xml

cd ~/${APPROOT}/${APPFOLDER}

sed -i &quot;s/ROOTPWD=.*/ROOTPWD=${DB_ROOT_PWD}/g&quot; ./launch_server/create_db_and_user
sed -i &quot;s/HOST=.*/HOST=${DB_HOST}/g&quot; ./launch_server/create_db_and_user

chmod a+x  ./launch_server/create_db_and_user

#清除缓存
#bash ./launch_server/clear_redis
bash ./launch_server/create_db_and_user</execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              </transfers>
              <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
              <usePromotionTimestamp>false</usePromotionTimestamp>
            </jenkins.plugins.publish__over__ssh.BapSshPublisher>
          </publishers>
          <continueOnError>false</continueOnError>
          <failOnError>false</failOnError>
          <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
          <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
        </delegate>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin>
  </prebuilders>
  <postbuilders>
    <jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin plugin="publish-over-ssh@1.13">
      <delegate>
        <consolePrefix>SSH: </consolePrefix>
        <delegate>
          <publishers>
            <jenkins.plugins.publish__over__ssh.BapSshPublisher>
              <configName>stress_center_and_data_host</configName>
              <verbose>false</verbose>
              <transfers>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory>${APPROOT}/${APPFOLDER}/launch_server</remoteDirectory>
                  <sourceFiles>launch_server/script/*</sourceFiles>
                  <excludes></excludes>
                  <removePrefix>launch_server/script</removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>cd ~/${APPROOT}/${APPFOLDER}
chmod a+x  ./launch_server/clear_redis

echo &quot;清除137上的redis&quot;
#清除缓存
bash ./launch_server/clear_redis</execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              </transfers>
              <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
              <usePromotionTimestamp>false</usePromotionTimestamp>
            </jenkins.plugins.publish__over__ssh.BapSshPublisher>
            <jenkins.plugins.publish__over__ssh.BapSshPublisher>
              <configName>stress_launch_host</configName>
              <verbose>false</verbose>
              <transfers>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory>${APPROOT}/${APPFOLDER}/launch_server</remoteDirectory>
                  <sourceFiles>launch_server/target/*.jar</sourceFiles>
                  <excludes></excludes>
                  <removePrefix>launch_server/target</removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>cd ~/${APPROOT}/${APPFOLDER}

bash ./launch_server/joker_launch_server start ${SERVER_ID} ${PORT} ./regionConfig.xml

echo &quot;dump heap&quot;
ps -ef | grep launch_server.jar | grep -v grep | awk &apos;{print $2}&apos; | while read pid &gt; /dev/null 2&gt;&amp;1
do
  mkdir -p ~/joker/heap_dump
  cd ~/joker/heap_dump
  $JAVA_HOME/bin/jmap -dump:format=b,file=launch_server $pid
done</execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              </transfers>
              <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
              <usePromotionTimestamp>false</usePromotionTimestamp>
            </jenkins.plugins.publish__over__ssh.BapSshPublisher>
          </publishers>
          <continueOnError>false</continueOnError>
          <failOnError>false</failOnError>
          <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
          <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
        </delegate>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin>
    <hudson.tasks.Shell>
      <command>rm -rf rf_robot_results
mkdir rf_robot_results
#pybot --outputdir rf_robot_results ./launch_server/Script/launch_robot_suite</command>
    </hudson.tasks.Shell>
  </postbuilders>
  <runPostStepsIfResult>
    <name>SUCCESS</name>
    <ordinal>0</ordinal>
    <color>BLUE</color>
    <completeBuild>true</completeBuild>
  </runPostStepsIfResult>
</maven2-moduleset>